[@@@ocaml.warning "-33"]
[@@@ocaml.warning "-32"]
[@@@ocaml.warning "-27"]
[@@@ocaml.warning "-26"]


(* open Core *)
open OUnit2

open Core
open Predict_conv
open Readfile
open Extradigit



(* Needs to be in float format and 28x28 that is squeezed to 784 *)
let imagearray = [|0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;1.0 ;1.0 ;1.0 ;1.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 ;0.0 |]


let testarray1 = [|[|0.0; 0.0; 0.0; 0.0; 0.0; 0.0; 0.0; 0.0; 0.0; 0.0|]; 
                   [|0.0; 0.0; 1.0; 1.0; 1.0; 0.0; 0.0; 1.0; 1.0; 0.0|]; 
                   [|0.0; 0.0; 1.0; 0.0; 1.0; 0.0; 0.0; 1.0; 1.0; 0.0|]; 
                   [|0.0; 0.0; 1.0; 1.0; 1.0; 0.0; 0.0; 1.0; 1.0; 0.0|];
                   [|0.0; 0.0; 0.0; 0.0; 0.0; 0.0; 0.0; 0.0; 0.0; 0.0|]|]


(* let testarray1_after_extract = [[|[|0.; 0.; 0.; 0.|]; [|0.; 1.; 1.; 1.|]; [|0.; 1.; 0.; 1.|];[|0.; 1.; 1.; 1.|]; [|0.; 0.; 0.; 0.|]|];[|[|0.; 0.; 0.|]; [|0.; 1.; 1.|]; [|0.; 1.; 1.|]; [|0.; 1.; 1.|];[|0.; 0.; 0.|]|]]; *)
  


(* let () = print_array (List.nth_exn testarray1_after_extract 0) 4 5 *)

(* let test_2darray = Array.make_matrix ~dimx:28 ~dimy:28 0.0 *)

(* testarray1_after_extract *)


let image_name_and_path_for_one = "../../../../backend/tests/handwrittenImageOfOne.txt"
let image_name_and_path_for_four = "../../../../backend/tests/handwrittenImageOfFour.txt"
let weights_name_and_path = "../../../../backend/tests/weights"


let heyo = strings_from_file image_name_and_path_for_one |> String.split_on_chars ~on:['\n']  |> sanitize_list |> apply_remove_first |> make_biglist |> make_2d_array

let eximages = extractimages heyo

(* let padimg = padimages eximages *)

let () = print_array heyo 27 27

(* let () = List.iter padimg ~f:(fun elt -> print_array elt) *)
 
(* heyo *)
let prediction1 = (predictImageFromFileName image_name_and_path_for_one weights_name_and_path)
let prediction2 = (predictImageFrom1DArray imagearray weights_name_and_path)
(* let prediction3 = (predictImageFrom2DArray test_2darray weights_name_and_path ) *)

let prediction_of_four = (predictImageFromFileName image_name_and_path_for_four weights_name_and_path)


(* let () = printf "%i" prediction1
let () = printf "%i" prediction2
let () = printf "%i" prediction3
let () = printf "%i" prediction_of_four *)



let miscellaneous_tests _ =
  assert_equal 1 prediction1;
  assert_equal 1 prediction2;
  (* assert_equal 1 prediction3; *)
  (* assert_equal testarray1_after_extract (extractimages testarray1); *)
  assert_equal 4 prediction_of_four



let ml_tests =
  "Part 1" >: test_list [ "miscellaneous_ml_tests" >:: miscellaneous_tests ]

 let series = "FinalProject Tests" >::: [ ml_tests ]
let () = run_test_tt_main series



